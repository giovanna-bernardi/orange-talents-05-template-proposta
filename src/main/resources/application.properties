# Health check
info.app.name=@project.name@
info.app.version=@project.version@
spring.application.name=proposta-application

management.endpoints.web.exposure.include=health,info,prometheus
management.endpoint.health.show-details=always
management.endpoints.prometheus.enabled=true
management.metrics.tags.aplicacao=${NOME_DA_APLICACAO:serviço de proposta}
management.metrics.tags.ambiente=${AMBIENTE:desenvolvimento}


feign.client.config.analiseFinanceira.read-timeout=100
feign.client.config.cartao.read-timeout=100

# OpenTracing with Jeager
# Jaeger - Habilita ou não
opentracing.jaeger.enabled=${JAEGER_ENABLED:true}
# Jaeger - Nome do serviço
opentracing.jaeger.service-name=${spring.application.name}
# Jaeger - Endereço para enviar os metadados (trace, span, etc)
opentracing.jaeger.http-sender.url=${JAEGER_ENDPOINT:http://localhost:14268/api/traces}
# Jaeger - Tipo de amostragem (probabilístico) e sua configuração (1 = 100%)
opentracing.jaeger.probabilistic-sampler.sampling-rate=${JAEGER_SAMPLER:1}
# Para enviar 10 traces por segundo
#opentracing.jaeger.rate-limiting-sampler.max-traces-per-second=${JAEGER_SAMPLER:10}

# spring security resource server configuration
spring.security.oauth2.resourceserver.jwt.issuer-uri=${KEYCLOAK_ISSUER_URI:http://keycloak:8080/auth/realms/nossa-proposta}
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=${KEYCLOAK_JWKS_URI:http://keycloak:8080/auth/realms/nossa-proposta/protocol/openid-connect/certs}

# Variáveis de ambiente
proposta.services.analise-financeira.host=${ANALISE_FINANCEIRA_URL:http://localhost:9999}
proposta.services.analise-financeira.solicitacao=${ANALISE_FINANCEIRA_API_SOLICITACAO:/api/solicitacao}
proposta.services.cartao.host=${CARTAO_URL:http://localhost:8888}
proposta.services.cartao.cartoes=${CARTAO_API_CARTOES:/api/cartoes}
proposta.services.cartao.bloqueios=${CARTAO_API_CARTOES_BLOQUEIOS:bloqueios}
proposta.services.cartao.avisos=${CARTAO_API_CARTOES_AVISOS:avisos}
proposta.services.cartao.carteiras=${CARTAO_API_CARTOES_CARTEIRAS:carteiras}
proposta.services.cartao.periodicidade=${CARTAO_PERIODICIDADE:20000}

# Para deixar o console colorido
spring.output.ansi.enabled=ALWAYS

# datasource
spring.datasource.url=${MYSQL_URL:jdbc:mysql://localhost:3306/proposta?createDatabaseIfNotExist=true}
spring.datasource.username=${MYSQL_USER:root}
spring.datasource.password=${MYSQL_PASSWORD:root}

# jpa
spring.jpa.hibernate.ddl-auto=update
#spring.jpa.show-sql=true
#spring.jpa.properties.hibernate.format_sql=true

server.port=8081

